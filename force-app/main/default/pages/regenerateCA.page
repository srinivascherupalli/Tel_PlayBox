<!-------------------------------------------------------------------------------
EDGE        -150285
Page        -regenerateCA
Description -Ability to regenerate CA form for Port-In and Port out reversal orders
Author      -Dheeraj Bhatt
--------------------------------------------------------------------------------- -->
<apex:page showHeader="false" sidebar="false" controller="CustomButtonGenerateCAform" action="{!checkPortInPortOutBasket}">
    <apex:includeLightning />
    <apex:slds /> <!--EDGE-172365 Observation fix to display lightning helptext -->
    <div id="container" style="padding-right: 30px;padding-left: 30px;padding-top: 50px;"/>
    <apex:pageMessages ></apex:pageMessages>
    <script>
    var basketId = "{!JSENCODE($CurrentPage.parameters.basketId) }";
    var isPortIn="{!isPortIn}";
    var isPortOut="{!isPortOut}";
      if(isPortOut=='true'){
        $Lightning.use("c:LightningAppDependencyHandler", function() {
            $Lightning.createComponent(
                "c:customerAuthorityFormFileUpload",
                {"basketid": basketId,"isRegenerateCAForm":true},
                "container",
                function(cmp) {
                    console.log("Component created!");
                    console.log(cmp);
                    
                    $A.eventService.addHandler({
                        event: 'force:navigateToSObject',
                        handler: function(event) {
                            console.log('vfp event: ' + event.getParam("recordId"));
                            console.log('theme'+userTheme);
                            
                            if(userTheme =='Theme4t' ){
                                // Salesforce app navigation
                                console.log('inside sf1');
                                sforce.one.navigateToSObject(event.getParam("recordId"));
                            }
                            else if(userTheme =='Theme3' ){
                                // Set the window's URL using a Visualforce expression
                                console.log('inside prm');
                                var recordId = event.getParam("recordId");
                                if(loggedinUserProfilename.includes("PRM")){
                                    window.location.href = '/partners/' + recordId;
                                }
                                else
                                    window.location.href = '/' + recordId;
                            }
                                else if(userTheme =='Theme4d' ){
                                    // Set the window's URL using a Visualforce expression
                                    console.log('inside lightning');
                                    var recordId = event.getParam("recordId");
                                    window.location.href = '/' + recordId;
                                }
                                    else{
                                        // Set the window's URL using a Visualforce expression
                                        console.log('inside classic');
                                        var recordId = event.getParam("recordId");
                                        window.location.href = '/' + recordId;
                                    }
                            
                        }
                    });
                });
        });
        
    }
     else  if(isPortIn=='true'){
        $Lightning.use("c:LightningAppDependencyHandler", function()
                       {
                           $Lightning.createComponent(
                               "c:CafAndPpvComponent",
                               {"basket_Id": basketId,"isRegenerateCAForm":true},
                               "container",
                               function(cmp) {
                                   $A.eventService.addHandler({
                                       event: 'force:navigateToSObject',
                                       handler: function(event) {
                                           if(userTheme =='Theme4t' ){
                                               // Salesforce app navigation
                                               sforce.one.navigateToSObject(event.getParam("recordId"));
                                           }
                                           else if(userTheme =='Theme3' ){
                                               // Set the window's URL using a Visualforce expression
                                               var recordId = event.getParam("recordId");
                                               if(loggedinUserProfilename.includes("PRM")){
                                                   window.location.href = '/partners/' + recordId;
                                               }else
                                                   window.location.href = '/' + recordId;
                                           }
                                               else if(userTheme =='Theme4d' ){
                                                   // Set the window's URL using a Visualforce expression
                                                   var recordId = event.getParam("recordId");
                                                   window.location.href = '/' + recordId;
                                               }else{
                                                   // Set the window's URL using a Visualforce expression
                                                   var recordId = event.getParam("recordId");
                                                   window.location.href = '/' + recordId;
                                               }
                                           
                                       }
                                   });
                               });
                           
                       }); 
        
    }
   
    
    
    </script>
</apex:page>