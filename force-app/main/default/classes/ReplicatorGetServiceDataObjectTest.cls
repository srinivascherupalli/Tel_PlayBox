@IsTest
public class ReplicatorGetServiceDataObjectTest {
    static testMethod void parseTest() {
        String json = '{ "Source_System_Id": "Replicator", "Correlation_Id": "1234", "CIDN": "1234567890", "Error_Code": "", "Error_Description": "", "site": [{ "ADBOR_Id": "222141258", "Error_Code": "", "Error_Description": "", "ProductList": [{ "Product_Type": "PSTN", "Product_Identifier": "6", "Association_Type": "Hunt Group", "Association_Role": "Auxilliary", "Association_Link_Id": "7", "Business_Owner": "Legacy", "Bundle_Indicator": "No", "Purchase_Order": "Y", "Invoice_Arrangement_Id": "4501519250", "Invoice_Arrangement_Id_MICA": "", "In_Flight_Flag": "N", "In_Flight_Legacy_System": "AXIS", "In_Flight_Order_Id": "", "Nominated_FNN": "", "DOT_GenType": "", "Enterprise_Id": "", "Error_Code": "", "Error_Description": "", "discount": [{ "Discount_Name": "", "Discount_Start_Date": "", "Discount_Monthly_Amount": "", "Discount_Term": "" }], "service": [{ "Service_ID": "0387681299", "Technical_Association_Role": "", "Service_Type": "Voice", "Bundle_Role": "", "Last_Replicator_Update_Date": "2017-11-08 00:28:39", "Error_Code": "", "Error_Description": "", "serviceCharacteristic": [{ "name": "ADSL_Bearer_Id", "value": "" }, { "name": "VOIP_Platform", "value": "" }, { "name": "User_Type", "value": "" }, { "name": "IP_Type", "value": "" }, { "name": "Telstra_GW_IPv4", "value": "" }, { "name": "Telstra_GW_IPv6", "value": "" }, { "name": "Cust_WAN_IP", "value": "" }, { "name": "IPv6_Prefix", "value": "" }, { "name": "Cust_LAN_IP", "value": "" }, { "name": "Cust_LAN_IPv6", "value": "" }, { "name": "BCS_FNN", "value": "" }, { "name": "Host_Name", "value": "" }, { "name": "Host_Password", "value": "" }, { "name": "Ops_Name", "value": "" }, { "name": "GB_Allowance", "value": "" }, { "name": "VoicetoEmail_Text", "value": "" }, { "name": "Unified_Plan_ID", "value": "" }, { "name": "Directory_Option", "value": "Directory Listing" }, { "name": "Call_Barring_Option", "value": "LOCAL CALLS ONLY" }, { "name": "RCRM_ Service", "value": "N" }, { "name": "Essential_Service", "value": "Y" }, { "name": "Temporary_Service", "value": "Y" }, { "name": "NSC_ Service", "value": "" }, { "name": "AOH_FNN", "value": "" }, { "name": "AOH_Cust_Trade_Name", "value": "" }, { "name": "AOH_Cust_Contact", "value": "" }, { "name": "AOH_Cust_Email", "value": "" }, { "name": "AOH_Cust_Phone_Num", "value": "" }, { "name": "Shareable", "value": "" }, { "name": "Group_Plan_Name", "value": "" }, { "name": "Group_Deal_Name", "value": "" }], "planCharacteristic": [{ "Plan_Deal_Type": "Plan", "Plan_Name": "$50 MONTHLY PLAN", "Plan_Term": "1", "Plan_Commercial_Type": "Casual", "Plan_Monthly_Amount": "16.13", "Plan_Start_Date": "13-07-2014", "Instalments_Billed": "", "Instalments_Remaining": "", "Legacy_String": "NA", "discount": { "Discount_Name": "$0.00/UNIT RATE METH=1/BCAT=REC/BILG METH = ADV", "Discount_Monthly_Amount": "10.11", "Discount_Percent_Amount": "", "Discount_Start_Date": "13-09-2014", "Discount_Term": "" } }], "serviceRelationship": [{ "relationshipType": "contains", "device": { "Device_Type": "BYO Analogue Device", "Device_Ownership": "Owned", "Device_Model": "Analogue Device", "Device_Name": "", "SKU": "", "Device_Payment_Type": "", "Device_Monthly_Amount": "", "Device_Plan_Start_Date": "", "Device_Plan_Term": "", "Device_Billing_System": "", "Device_Billing_System_ID": "", "Legacy_Link": "", "DECT_BaseStation": "", "DECT_Handset": "", "Quantity": "", "Error_Code": "", "Error_Description": "", "discount": [{ "Discount_Name": "", "Discount_Monthly_Amount": "", "Discount_Percent_Amount": "", "Discount_Start_Date": "", "Discount_Term": "" }] } }, { "relationshipType": "contains", "serviceExtension": [] }] }] }] }] }';
        Test.startTest();
        ReplicatorGetServiceDataObject obj1 = ReplicatorGetServiceDataObject.parse(json);
        Test.stopTest();
        ReplicatorGetServiceDataObject obj2 = new ReplicatorGetServiceDataObject();
        obj2.Source_System_Id = 'Replicator';
        obj2.Correlation_Id = '1234';
        obj2.CIDN = '1234567890';
        obj2.Error_Code = '';
        obj2.Error_Description = '';
        ReplicatorGetServiceDataObject.SiteDTO site = new ReplicatorGetServiceDataObject.SiteDTO();
        site.ADBOR_Id = '222141258';
        site.Error_Code = '';
        site.Error_Description = '';
        ReplicatorGetServiceDataObject.ProductDTO productDTO = new ReplicatorGetServiceDataObject.ProductDTO();
        productDTO.Product_Type = 'PSTN';
        productDTO.Product_Identifier = '6';
        productDTO.Association_Type = 'Hunt Group';
        productDTO.Association_Role = 'Auxilliary';
        productDTO.Association_Link_Id = '7';
        productDTO.Business_Owner = 'Legacy';
        productDTO.Bundle_Indicator = 'No';
        productDTO.Purchase_Order = 'Y';
        productDTO.Invoice_Arrangement_Id = '4501519250';
        productDTO.Invoice_Arrangement_Id_MICA = '';
        productDTO.In_Flight_Flag = 'N';
        productDTO.In_Flight_Legacy_System = 'AXIS';
        productDTO.In_Flight_Order_Id = '';
        productDTO.Nominated_FNN = '';
        productDTO.DOT_GenType = '';
        productDTO.Enterprise_Id = '';
        productDTO.Error_Code = '';
        productDTO.Error_Description = '';
        ReplicatorGetServiceDataObject.DiscountDTO discountDTO = new ReplicatorGetServiceDataObject.DiscountDTO();
        discountDTO.Discount_Name = '';
        discountDTO.Discount_Start_Date = '';
        discountDTO.Discount_Monthly_Amount = '';
        discountDTO.Discount_Term = '';
        ReplicatorGetServiceDataObject.ServiceDTO serviceDTO = new ReplicatorGetServiceDataObject.ServiceDTO();
        serviceDTO.Service_ID = '0387681299';
        serviceDTO.Technical_Association_Role = '';
        serviceDTO.Service_Type = 'Voice';
        serviceDTO.Bundle_Role = '';
        serviceDTO.Last_Replicator_Update_Date = '2017-11-08 00=28=39';
        serviceDTO.Error_Code = '';
        serviceDTO.Error_Description = '';
        ReplicatorGetServiceDataObject.ServiceCharacteristicDTO serviceCharacteristicDTO = new ReplicatorGetServiceDataObject.ServiceCharacteristicDTO();
        serviceCharacteristicDTO.name = 'ADSL_Bearer_Id';
        serviceCharacteristicDTO.value = '';
        serviceDTO.serviceCharacteristic  = new List<ReplicatorGetServiceDataObject.ServiceCharacteristicDTO>();
        serviceDTO.serviceCharacteristic.add(serviceCharacteristicDTO);
        ReplicatorGetServiceDataObject.PlanCharacteristicDTO planCharacteristicDTO = new ReplicatorGetServiceDataObject.PlanCharacteristicDTO();
        planCharacteristicDTO.Plan_Deal_Type = 'Plan';
        planCharacteristicDTO.Plan_Name = '$50 MONTHLY PLAN';
        planCharacteristicDTO.Plan_Term = '1';
        planCharacteristicDTO.Plan_Commercial_Type = 'Casual';
        planCharacteristicDTO.Plan_Monthly_Amount = '16.13';
        planCharacteristicDTO.Plan_Start_Date = '13-07-2014';
        planCharacteristicDTO.Instalments_Billed = '';
        planCharacteristicDTO.Instalments_Remaining = '';
        planCharacteristicDTO.Legacy_String = 'NA';
        ReplicatorGetServiceDataObject.DiscountDTO discountDTO1 = new ReplicatorGetServiceDataObject.DiscountDTO();
        discountDTO1.Discount_Name = '$0.00/UNIT RATE METH=1/BCAT=REC/BILG METH = ADV';
        discountDTO1.Discount_Monthly_Amount = '10.11';
        discountDTO1.Discount_Percent_Amount = '';
        discountDTO1.Discount_Start_Date = '13-09-2014';
        discountDTO1.Discount_Term = '';
        planCharacteristicDTO.discount=discountDTO1;
        ReplicatorGetServiceDataObject.ServiceRelationshipDTO serviceRelationshipDTO = new ReplicatorGetServiceDataObject.ServiceRelationshipDTO();
        serviceRelationshipDTO.relationshipType = 'contains';
        ReplicatorGetServiceDataObject.DeviceDTO deviceDTO = new ReplicatorGetServiceDataObject.DeviceDTO();
        deviceDTO.Device_Type = 'BYO Analogue Device';
        deviceDTO.Device_Ownership = 'Owned';
        deviceDTO.Device_Model = 'Analogue Device';
        deviceDTO.Device_Name = '';
        deviceDTO.SKU = '';
        deviceDTO.Device_Payment_Type = '';
        deviceDTO.Device_Monthly_Amount = '';
        deviceDTO.Device_Plan_Start_Date = '';
        deviceDTO.Device_Plan_Term = '';
        deviceDTO.Device_Billing_System = '';
        deviceDTO.Device_Billing_System_ID = '';
        deviceDTO.Legacy_Link = '';
        deviceDTO.DECT_BaseStation = '';
        deviceDTO.DECT_Handset = '';
        deviceDTO.Quantity = '';
        deviceDTO.Error_Code = '';
        deviceDTO.Error_Description = '';
        serviceRelationshipDTO.device = deviceDTO;
        ReplicatorGetServiceDataObject.ServiceExtensionDTO serviceExtensionDTO = new ReplicatorGetServiceDataObject.ServiceExtensionDTO();
        serviceRelationshipDTO.serviceExtension  = new List<ReplicatorGetServiceDataObject.ServiceExtensionDTO>();
        serviceRelationshipDTO.serviceExtension.add(serviceExtensionDTO);
        serviceDTO.serviceRelationship  = new List<ReplicatorGetServiceDataObject.serviceRelationshipDTO>();
        serviceDTO.serviceRelationship.add(serviceRelationshipDTO);
        planCharacteristicDTO.discount = discountDTO;
        productDTO.service= new List<ReplicatorGetServiceDataObject.ServiceDTO>();
        productDTO.service.add(serviceDTO);
        productDTO.discount= new List<ReplicatorGetServiceDataObject.DiscountDTO>();
        productDTO.discount.add(discountDTO);
        site.productList= new List<ReplicatorGetServiceDataObject.ProductDTO>();
        site.productList.add(productDTO);
        obj2.site= new List<ReplicatorGetServiceDataObject.SiteDTO>();
        obj2.site.add(site);        
        System.assert(!obj1.equals(obj2), 'Error during JSON parsing');
    }
    static testMethod void cloneTest() {
        ReplicatorGetServiceDataObject.ServiceDTO serviceDTO = new ReplicatorGetServiceDataObject.ServiceDTO();
        serviceDTO.Service_ID = '0387681299';
        serviceDTO.Technical_Association_Role = '';
        serviceDTO.Service_Type = 'Voice';
        serviceDTO.Bundle_Role = '';
        serviceDTO.Last_Replicator_Update_Date = '2017-11-08 00=28=39';
        serviceDTO.Error_Code = '';
        serviceDTO.Error_Description = '';
        Test.startTest();
	  	ReplicatorGetServiceDataObject.ServiceDTO serviceDTOResult=ReplicatorGetServiceDataObject.cloneService(serviceDTO);
        Test.stopTest();
        System.assert(!serviceDTO.equals(serviceDTOResult), 'Error during JSON parsing');
    }
}